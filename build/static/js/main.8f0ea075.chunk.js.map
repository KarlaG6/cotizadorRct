{"version":3,"sources":["components/Header.js","components/Form.js","Helper.js","components/Resumen.js","components/Result.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["HeaderContainer","styled","header","HeaderText","h1","Header","titulo","Campo","div","Label","label","Select","select","InputRadio","input","Button","button","Error","Form","setResumen","setLoading","useState","marca","year","plan","datos","handleDatos","error","setError","getInfo","e","target","name","value","onSubmit","preventDefault","trim","rslt","difference","Date","getFullYear","getDifYear","increment","calcMarca","planIncrement","getPlan","parseFloat","toFixed","setTimeout","cotizacion","Number","onChange","type","checked","ResumeContainer","Resumen","Mssg","p","ResultCotiza","CotizaText","Result","TransitionGroup","component","className","CSSTransition","classNames","key","timeout","enter","exit","Spinner","Container","FormContainer","App","resumen","loading","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"+kBAIA,IAAMA,EAAkBC,IAAOC,OAAV,KAOfC,EAAaF,IAAOG,GAAV,KAkBDC,EAXA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACb,OACI,kBAACN,EAAD,KACI,kBAACG,EAAD,KAAaG,K,iqCChBzB,IAAMC,EAAQN,IAAOO,IAAV,KAMLC,EAAQR,IAAOS,MAAV,KAILC,EAASV,IAAOW,OAAV,KASNC,EAAaZ,IAAOa,MAAV,KAIVC,EAASd,IAAOe,OAAV,KAkBNC,EAAQhB,IAAOO,IAAV,KAsGIU,EA7FF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAAiB,EACZC,mBAAS,CAClCC,MAAO,GACPC,KAAM,GACNC,KAAM,KAJ+B,mBAClCC,EADkC,KAC3BC,EAD2B,OAOfL,oBAAS,GAPM,mBAOlCM,EAPkC,KAO3BC,EAP2B,KASjCN,EAAqBG,EAArBH,MAAOC,EAAcE,EAAdF,KAAMC,EAAQC,EAARD,KAEfK,EAAU,SAAAC,GACZJ,EAAY,2BACLD,GADI,kBAENK,EAAEC,OAAOC,KAAQF,EAAEC,OAAOE,UAmCnC,OACI,0BAAMC,SAhCY,SAAAJ,GAElB,GADAA,EAAEK,iBACmB,KAAjBb,EAAMc,QAAiC,KAAhBb,EAAKa,QAAiC,KAAhBZ,EAAKY,OAAtD,CAIAR,GAAS,GAET,IAAIS,EAAO,IAELC,ECnFP,SAAoBf,GACvB,OAAO,IAAIgB,MAAOC,cAAgBjB,EDkFXkB,CAAWlB,GAE9Bc,GAAwB,EAAbC,EAAkBD,EAAM,IAEnCA,ECnFD,SAAmBf,GACtB,IAAIoB,EAEJ,OAAQpB,GACJ,IAAK,YACDoB,EAAY,IACZ,MACJ,IAAK,UACDA,EAAY,KACZ,MACJ,IAAK,WACDA,EAAY,KAKpB,OAAOA,EDmEIC,CAAUrB,GAAOe,EACxB,IAAMO,ECjEP,SAAiBpB,GACpB,MAAkB,WAATA,EAAqB,IAAO,IDgEXqB,CAAQrB,GAC9Ba,EAAOS,WAAYF,EAAgBP,GAAOU,QAAQ,GAElD3B,GAAW,GAEX4B,YAAW,WACP5B,GAAW,GAEXD,EAAW,CACP8B,WAAYC,OAAOb,GACnBZ,YAEL,UAxBCG,GAAS,KA8BPD,EAAQ,kBAACV,EAAD,0CAAmD,KAC7D,kBAACV,EAAD,KACI,kBAACE,EAAD,cACA,kBAACE,EAAD,CAAQqB,KAAK,QAAQC,MAAOX,EAAO6B,SAAUtB,GACzC,4BAAQI,MAAM,IAAd,oBACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,YAAd,cAGR,kBAAC1B,EAAD,KACI,kBAACE,EAAD,eACA,kBAACE,EAAD,CAAQqB,KAAK,OAAOC,MAAOV,EAAM4B,SAAUtB,GACvC,4BAAQI,MAAM,IAAd,oBACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,UAGR,kBAAC1B,EAAD,KACI,kBAACE,EAAD,aACA,kBAACI,EAAD,CAAYuC,KAAK,QAAQpB,KAAK,OAAOC,MAAM,SAASoB,QAAkB,WAAT7B,EAAmB2B,SAAUtB,IAF9F,YAGI,kBAAChB,EAAD,CAAYuC,KAAK,QAAQpB,KAAK,OAAOC,MAAM,WAAWoB,QAAkB,aAAT7B,EAAqB2B,SAAUtB,IAHlG,YAMA,kBAACd,EAAD,CAAQqC,KAAK,UAAb,a,6LEtIZ,IAAME,EAAkBrD,IAAOO,IAAV,KA8BN+C,EAvBC,SAAC,GAAa,IAAZ9B,EAAW,EAAXA,MAEPH,EAAqBG,EAArBH,MAAOC,EAAcE,EAAdF,KAAMC,EAAQC,EAARD,KAEpB,MAAc,KAAVF,GAAyB,KAATC,GAAwB,KAATC,GAI/B,kBAAC8B,EAAD,KACI,wDACA,4BACI,sCAAYhC,EAAZ,KACA,qCAAWE,EAAX,KACA,iDAAoBD,EAApB,Q,8mBCnBhB,IAAMiC,EAAMvD,IAAOwD,EAAT,KAMJC,EAAezD,IAAOO,IAAV,KAQZmD,EAAY1D,IAAOwD,EAAT,KA2BDG,EAnBA,SAAC,GAAoB,IAAlBX,EAAiB,EAAjBA,WAEd,OACgB,IAAfA,EACK,kBAACO,EAAD,6CACE,kBAACE,EAAD,KACI,kBAACG,EAAA,EAAD,CAAiBC,UAAU,OAAOC,UAAU,aACxC,kBAACC,EAAA,EAAD,CAAeC,WAAW,YAAYC,IAAKjB,EAAYkB,QAAS,CAAEC,MAAO,IAAKC,KAAM,MAChF,kBAACV,EAAD,uBAA2B,8BAAOV,QCtB3CqB,G,MAVC,WACZ,OACI,yBAAKP,UAAU,WACX,yBAAKA,UAAU,YACf,yBAAKA,UAAU,YACf,yBAAKA,UAAU,e,6OCA3B,IAAMQ,EAAYtE,IAAOO,IAAV,KAMTgE,EAAgBvE,IAAOO,IAAV,KAiCJiE,MA5Bf,WAAgB,IAAD,EAEmBpD,mBAAS,CACnC4B,WAAY,EACZxB,MAAO,CACHH,MAAO,GACPE,KAAM,GACND,KAAM,MAPH,mBAEJmD,EAFI,KAEKvD,EAFL,OAWoBE,oBAAS,GAX7B,mBAWHsD,EAXG,KAWMvD,EAXN,KAaH6B,EAAqByB,EAArBzB,WAAYxB,EAASiD,EAATjD,MACpB,OACI,kBAAC8C,EAAD,KACI,kBAAC,EAAD,CAAQjE,OAAO,iBAEf,kBAACkE,EAAD,KACI,kBAAC,EAAD,CAAOrD,WAAYA,EAAYC,WAAYA,IACzCuD,EAAU,kBAAC,EAAD,MAAc,KAC1B,kBAAC,EAAD,CAASlD,MAAOA,IACbkD,EAA+C,KAArC,kBAAC,EAAD,CAAQ1B,WAAYA,OC7B7B2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAjE,GACLkE,QAAQlE,MAAMA,EAAMmE,c","file":"static/js/main.8f0ea075.chunk.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nconst HeaderContainer = styled.header`\n    background-color: #26C6DA;\n    padding: 10px;\n    font-weight: bold;\n    color: #FFF;\n`;\n\nconst HeaderText = styled.h1`\n    font-size: 2rem;\n    margin: 0;\n    font-family: 'Slabo 27px', serif;\n    text-align: center;\n`;\n\nconst Header = ({titulo}) => {\n    return ( \n        <HeaderContainer>\n            <HeaderText>{titulo}</HeaderText>\n        </HeaderContainer>\n     );\n}\n \nHeader.propTypes = {\n    titulo: PropTypes.string.isRequired\n}\nexport default Header;","import React, {useState} from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport { getDifYear, calcMarca, getPlan } from '../Helper';\n\nconst Campo = styled.div`\n    display: flex;\n    margin-bottom: 1rem;\n    align-items: center;\n`;\n\nconst Label = styled.label`\n    flex: 0 0 100px;\n`;\n\nconst Select = styled.select`\n    display: block;\n    width: 100%;\n    padding: 0.7rem 1rem;\n    border: 1px solid #e1e1e1;\n    -webkit-appearance: none;\n    border-radius: 0.7rem;\n`;\n\nconst InputRadio = styled.input`\n    margin: 0 1rem;\n`;\n\nconst Button = styled.button`\n    background-color: #00838F;\n    font-size: 16px;\n    width: 100%;\n    padding: 1rem;\n    color: #FFF;\n    text-transform: uppercase;\n    font-weight: bold;\n    border: none;\n    transition: background-color .3s ease;\n    margin-top: 2rem;\n\n    &:hover {\n        cursor: pointer;\n        background-color:#26C6DA\n    }\n`;\n\nconst Error = styled.div`\n    background-color: red;\n    color: white;\n    padding: 1rem;\n    width: 100%;\n    text-align: center;\n    margin-bottom: 2rem;\n`;\n\nconst Form = ({ setResumen, setLoading }) => {\n    const [datos, handleDatos] = useState({\n        marca: '',\n        year: '',\n        plan: ''\n    });\n\n    const [error, setError] = useState(false);\n\n    const { marca, year, plan} = datos;\n\n    const getInfo = e => {\n        handleDatos({\n            ...datos,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const cotizarSeguro = e => {\n        e.preventDefault();\n        if( marca.trim() === '' || year.trim() === '' || plan.trim() === ''){\n            setError(true);\n            return;\n        }\n        setError(false);\n\n        let rslt = 2000;\n\n        const difference = getDifYear(year);\n\n        rslt -= (( difference * 3) * rslt)/100;\n\n        rslt = calcMarca(marca)*rslt;\n        const planIncrement = getPlan(plan);\n        rslt = parseFloat( planIncrement * rslt ).toFixed(2);\n        \n        setLoading(true);\n\n        setTimeout(() => {\n            setLoading(false);\n            //pasa la info al main component\n            setResumen({\n                cotizacion: Number(rslt), \n                datos\n            });\n        }, 3000);\n\n    }\n\n    return ( \n        <form onSubmit={cotizarSeguro}>\n            { error ? <Error>Todos los campos son obligatorios</Error> : null}\n            <Campo>\n                <Label>Marca</Label>\n                <Select name=\"marca\" value={marca} onChange={getInfo}>\n                    <option value=\"\">-- Seleccione --</option>\n                    <option value=\"americano\">Americano</option>\n                    <option value=\"europeo\">Europeo</option>\n                    <option value=\"asiatico\">Asiatico</option>\n                </Select>\n            </Campo>\n            <Campo>\n                <Label>Año</Label>\n                <Select name=\"year\" value={year} onChange={getInfo}>\n                    <option value=\"\">-- Seleccione --</option>\n                    <option value=\"2021\">2021</option>\n                    <option value=\"2020\">2020</option>\n                    <option value=\"2019\">2019</option>\n                    <option value=\"2018\">2018</option>\n                    <option value=\"2017\">2017</option>\n                    <option value=\"2016\">2016</option>\n                    <option value=\"2015\">2015</option>\n                    <option value=\"2014\">2014</option>\n                    <option value=\"2013\">2013</option>\n                    <option value=\"2012\">2012</option>\n                </Select>\n            </Campo>\n            <Campo>\n                <Label>Plan</Label>\n                <InputRadio type=\"radio\" name=\"plan\" value=\"basico\" checked={plan === \"basico\"} onChange={getInfo}/>Básico\n                <InputRadio type=\"radio\" name=\"plan\" value=\"completo\" checked={plan === \"completo\"} onChange={getInfo}/>Completo\n\n            </Campo>\n            <Button type=\"submit\">Cotizar</Button>\n        </form>\n\n\n    );\n}\nForm.propTypes = {\n    setResumen: PropTypes.func.isRequired,\n    setLoading: PropTypes.func.isRequired\n}\nexport default Form;","export function getDifYear(year){\n    return new Date().getFullYear() - year;\n}\n\nexport function calcMarca(marca){\n    let increment;\n    \n    switch( marca){\n        case 'americano':\n            increment = 1.30;\n            break;\n        case 'europeo':\n            increment = 1.15;\n            break;\n        case 'asiatico':\n            increment = 1.05;\n            break;\n        default:\n            break;\n    }\n    return increment;\n}\n\nexport function getPlan(plan){\n    return ( plan === 'basico') ? 1.20 : 1.50;\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nconst ResumeContainer = styled.div`\n    padding: 1rem;\n    text-align: center;\n    background-color: #00838F;\n    color: #FFF;\n    margin-top: 1rem;\n`;\nconst Resumen = ({datos}) => {\n    \n    const {marca, year, plan} = datos;\n\n    if (marca === '' || year === '' || plan === '')\n        return true;\n    \n    return ( \n        <ResumeContainer>\n            <h2>Resumen de Cotización</h2>\n            <ul>\n                <li>Marca: {marca} </li>\n                <li>Plan: {plan} </li>\n                <li>Año del carro: {year} </li>\n            </ul>\n        </ResumeContainer>\n     );\n}\n\nResumen.propTypes = {\n    datos: PropTypes.object.isRequired\n}\n\nexport default Resumen;","import React from 'react';\nimport styled from '@emotion/styled';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\n\nconst Mssg =styled.p`\n    background-color: rgb(127, 224, 237);\n    margin-top: 2rem;\n    padding: 1rem;\n    text-align: center;\n`;\nconst ResultCotiza = styled.div`\n    text-align: center;\n    padding: .5rem;\n    border: 1px solid #26C6DA;\n    background-color: rgb(127, 224, 237);\n    margin-top: 1rem;\n    position: relative;\n`;\nconst CotizaText =styled.p`\n    color: #00839F;\n    padding: 1rem;\n    text-transform: uppercase;\n    font-weight: bold;\n    margin: 0;\n`;\n\nconst Result = ({ cotizacion }) => {\n    \n    return ( \n    (cotizacion === 0) \n        ? <Mssg>Elige marca, año y tipo de seguro</Mssg>\n        : ( <ResultCotiza> \n                <TransitionGroup component=\"span\" className=\"resultado\">\n                    <CSSTransition classNames=\"resultado\" key={cotizacion} timeout={{ enter: 500, exit: 500}}>\n                        <CotizaText>El total es: $ <span>{cotizacion}</span></CotizaText>\n                    </CSSTransition>\n                </TransitionGroup>\n            </ResultCotiza>\n            )\n    );\n}\n \nResult.propTypes = {\n    cotizacion: PropTypes.number.isRequired\n}\nexport default Result;","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n    return ( \n        <div className=\"spinner\">\n            <div className=\"bounce1\"></div>\n            <div className=\"bounce2\"></div>\n            <div className=\"bounce3\"></div>\n        </div>\n     );\n}\n \nexport default Spinner;","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport styled from '@emotion/styled';\nimport Form from './components/Form';\nimport Resumen from './components/Resumen';\nimport Result from './components/Result';\nimport Spinner from './components/Spinner';\n\nconst Container = styled.div`\n    max-width: 600px;\n    margin: 0 auto;\n\n`;\n\nconst FormContainer = styled.div`\n    background-color: #FFF;\n    padding: 3rem;\n`;\n\nfunction App() {\n\n    const [resumen, setResumen] = useState({\n        cotizacion: 0,\n        datos: {\n            marca: '',\n            plan: '',\n            year: ''\n        }\n    });\n\n    const [ loading, setLoading] = useState(false);\n\n    const { cotizacion, datos} = resumen;\n    return (\n        <Container>\n            <Header titulo=\"Mi cotizador\" />\n\n            <FormContainer>\n                <Form  setResumen={setResumen} setLoading={setLoading} />\n                { loading ? <Spinner /> : null }\n                <Resumen datos={datos} /> \n                { !loading ? <Result cotizacion={cotizacion} /> : null }\n            </FormContainer>\n        </Container >\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}